/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/summary": {
    /**
     * Get summary forecast for a location
     * @description Returns a summary forecast of the next 30 days either for the cell at the given coordinates or for the cells within the given bounding box
     */
    get: operations["summary_summary_get"];
  };
  "/detailed": {
    /**
     * Get detailed forecast for a location
     * @description Returns a detailed forecast of the next 30 days either for the cell at the given coordinates or for the cells within the given bounding box
     */
    get: operations["detailed_detailed_get"];
  };
  "/threshold": {
    /**
     * Get return period thresholds for a location
     * @description Returns the 2-, 5-, and 20-year return period thresholds either for the cell at the given coordinates or for the cells within the given bounding box
     */
    get: operations["threshold_threshold_get"];
  };
  "/ready": {
    /**
     * Check if this service is ready to receive requests
     * @description Returns a message describing the status of this service
     */
    get: operations["ready_ready_get"];
  };
  "/health": {
    /**
     * Check if this service is alive
     * @description Returns a simple message to indicate that this service is alive
     */
    get: operations["liveness_health_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** DetailedFeature */
    DetailedFeature: {
      /**
       * Id
       * @description A unique identifier for the feature.
       */
      id: string;
      /**
       * Type
       * @description The type of the feature, typically 'Feature' for GeoJSON objects.
       * @example Feature
       * @constant
       */
      type: "Feature";
      /** @description The geometric details of the feature, including its type and coordinates. */
      geometry: components["schemas"]["Geometry"];
      /** @description Specific properties of the detailed forecast, including probabilities for different return periods and discharge statistics. */
      properties: components["schemas"]["DetailedProperties"];
    };
    /** DetailedFeatureCollection */
    DetailedFeatureCollection: {
      /**
       * Type
       * @description The type of the collection, typically 'FeatureCollection' for a group of features.
       * @constant
       */
      type: "FeatureCollection";
      /**
       * Features
       * @description A collection of detailed forecasts, providing extensive forecast data including detailed probabilities and discharge information.
       */
      features: components["schemas"]["DetailedFeature"][];
    };
    /** DetailedProperties */
    DetailedProperties: {
      /**
       * Issued On
       * Format: date
       * @description The date the summary forecast was issued on. The GloFAS hydrological model is run every day at 00:00 UTC.
       * @example 2023-11-07
       */
      issued_on: string;
      /**
       * Valid For
       * Format: date
       * @description The date of the 24-hour forecast period for the flood. The forecast uses the discharge expected between 00:00 UTC and 23:59 UTC of that day.
       * @example 2023-12-01
       */
      valid_for: string;
      /**
       * Step
       * @description The time step number of the forecast data.
       * @example 22
       */
      step: number;
      /**
       * P Above 2Y
       * @description Probability of exceedance over the 2-year return period threshold.
       * @example 0.8627450980392157
       */
      p_above_2y: number;
      /**
       * P Above 5Y
       * @description Probability of exceedance over the 5-year return period threshold.
       * @example 0.29411764705882354
       */
      p_above_5y: number;
      /**
       * P Above 20Y
       * @description Probability of exceedance over the 20-year return period threshold.
       * @example 0.0196078431372549
       */
      p_above_20y: number;
      /**
       * Min Dis
       * @description Minimum forecasted discharge in m^3/s.
       * @example 16.2890625
       */
      min_dis: number;
      /**
       * Q1 Dis
       * @description First quartile of forecasted discharge in m^3/s.
       * @example 21.83984375
       */
      q1_dis: number;
      /**
       * Median Dis
       * @description Median forecasted discharge in m^3/s.
       * @example 24.87109375
       */
      median_dis: number;
      /**
       * Q3 Dis
       * @description Third quartile of forecasted discharge in m^3/s.
       * @example 27.44921875
       */
      q3_dis: number;
      /**
       * Max Dis
       * @description Maximum forecasted discharge in m^3/s.
       * @example 39.64062599
       */
      max_dis: number;
    };
    /** DetailedResponseModel */
    DetailedResponseModel: {
      /** @description A feature collection representing the queried location's detailed forecast data. */
      queried_location: components["schemas"]["DetailedFeatureCollection"];
      /** @description A feature collection representing the neighboring location's detailed forecast data, potentially empty if there is no neighboring forecast data. */
      neighboring_location?: components["schemas"]["DetailedFeatureCollection"] | null;
    };
    /** Geometry */
    Geometry: {
      /**
       * @description The nature of the geometry type, which is 'Polygon' for this model.
       * @example Polygon
       */
      type: components["schemas"]["GeometryType"];
      /**
       * Coordinates
       * @description Coordinates for the Polygon geometry type, defined according to a 0.05-degree resolution grid. Each polygon's coordinates are provided as an array of points, with each point specifying its longitude and latitude in decimal degrees. The array forms a closed linear ring that defines the polygon's boundary, with the first and last point being identical to close the ring.
       * @example [
       *   [
       *     [
       *       51.95,
       *       16.95
       *     ],
       *     [
       *       51.95,
       *       17
       *     ],
       *     [
       *       52,
       *       17
       *     ],
       *     [
       *       52,
       *       16.95
       *     ],
       *     [
       *       51.95,
       *       16.95
       *     ]
       *   ]
       * ]
       */
      coordinates: number[][][];
    };
    /**
     * GeometryType
     * @constant
     */
    GeometryType: "Polygon";
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /**
     * IntensityEnum
     * @enum {string}
     */
    IntensityEnum: "P" | "R" | "Y" | "G";
    /**
     * PeakTimingEnum
     * @enum {string}
     */
    PeakTimingEnum: "BB" | "GC" | "GB";
    /** SummaryFeature */
    SummaryFeature: {
      /**
       * Id
       * @description A unique identifier for the feature.
       */
      id: string;
      /**
       * Type
       * @description The type of the feature, typically 'Feature' for GeoJSON objects.
       * @example Feature
       * @constant
       */
      type: "Feature";
      /** @description The geometric details of the feature, including its type and coordinates. */
      geometry: components["schemas"]["Geometry"];
      /** @description Specific properties of the summary forecast, including various attributes like tendency, peak step, and intensity. */
      properties: components["schemas"]["SummaryProperties"];
    };
    /** SummaryFeatureCollection */
    SummaryFeatureCollection: {
      /**
       * Type
       * @description The type of the collection, typically 'FeatureCollection' for a group of features.
       * @constant
       */
      type: "FeatureCollection";
      /**
       * Features
       * @description A collection of summary forecasts, each containing specific forecast information for a queried location.
       */
      features: components["schemas"]["SummaryFeature"][];
    };
    /** SummaryProperties */
    SummaryProperties: {
      /**
       * Issued On
       * Format: date
       * @description The date the summary forecast was issued on. The GloFAS hydrological model is run every day at 00:00 UTC.
       * @example 2023-11-07
       */
      issued_on: string;
      /**
       * Peak Step
       * @description The step number at which the peak occurs, ranging from 1 to 30.
       * @example 1
       */
      peak_step: number;
      /**
       * Peak Day
       * Format: date
       * @description The date on which the flood peak is forecasted to occur, assuming UTC timezone.
       * @example 2023-11-07
       */
      peak_day: string;
      /**
       * @description The timing of the flood peak indicated by border and grayed colors. BB: Black border, peak forecasted within days 1-3. GC: Grayed color, peak forecasted after day 10 with <30% probability of exceeding the 2-year return period threshold in first 10 days. GB: Gray border, floods of some severity in first 10 days and peak after day 3.
       * @example BB
       */
      peak_timing: components["schemas"]["PeakTimingEnum"];
      /**
       * Max Median Dis
       * @description The maximum of the median discharges over the forecast horizon in m^3/s.
       * @example 314.96875
       */
      max_median_dis: number;
      /**
       * Min Median Dis
       * @description The minimum of the median discharges over the forecast horizon in m^3/s.
       * @example 89.9921875
       */
      min_median_dis: number;
      /**
       * Control Dis
       * @description The control discharge in m^3/s. Currently taken to be the median discharge of the first day in forecasted.
       * @example 314.96875
       */
      control_dis: number;
      /**
       * Max Max Dis
       * @description The maximum of the maximum discharges over the forecast horizon in m^3/s.
       * @example 340.7265625
       */
      max_max_dis: number;
      /**
       * Min Min Dis
       * @description The minimum of the minimum discharges over the forecast horizon in m^3/s.
       * @example 67.703125
       */
      min_min_dis: number;
      /**
       * @description The flood tendency (indicated by shape) according to the evolution of flood intensity signal over the forecast horizon. U: Upward triangle, increasing trend over the next 30-days with 30-day max median exceeding initial (control) discharge by >10%. D: Downward triangle, decreasing trend over the next 30-days with 30-day max median not exceeding initial discharge by >10% and min median is >=10% below initial discharge. C: Circle, stagnant flow with no significant trend detected.
       * @example U
       */
      tendency: components["schemas"]["TendencyEnum"];
      /**
       * Max P Above 20Y
       * @description The maximum probability of exceeding the 20-year return period threshold over the forecast horizon.
       * @example 1
       */
      max_p_above_20y: number;
      /**
       * Max P Above 5Y
       * @description The maximum probability of exceeding the 5-year return period threshold over the forecast horizon.
       * @example 1
       */
      max_p_above_5y: number;
      /**
       * Max P Above 2Y
       * @description The maximum probability of exceeding the 2-year return period threshold over the forecast horizon.
       * @example 1
       */
      max_p_above_2y: number;
      /**
       * @description The flood intensity (indicated by color) relating to maximum return period threshold exceedance probabilities over the forecast horizon. P: Purple, maximum 20-year exceedance probability >=30%; R: Red, maximum for 20-year <30% and 5-year >=30%; Y: Yellow, maximum for 5-year <30% and 2-year >=30%; G: Gray, no flood signal (2-year <30%).
       * @example P
       */
      intensity: components["schemas"]["IntensityEnum"];
    };
    /** SummaryResponseModel */
    SummaryResponseModel: {
      /** @description A feature collection representing the queried location's summary forecast data. */
      queried_location: components["schemas"]["SummaryFeatureCollection"];
      /** @description A feature collection representing the neighboring location's summary forecast data, potentially empty if there is no neighboring forecast data. */
      neighboring_location?: components["schemas"]["SummaryFeatureCollection"] | null;
    };
    /**
     * TendencyEnum
     * @enum {string}
     */
    TendencyEnum: "U" | "D" | "C";
    /** ThresholdFeature */
    ThresholdFeature: {
      /**
       * Id
       * @description A unique identifier for the feature.
       */
      id: string;
      /**
       * Type
       * @description The type of the feature, typically 'Feature' for GeoJSON objects.
       * @example Feature
       * @constant
       */
      type: "Feature";
      /** @description The geometric details of the feature, including its type and coordinates. */
      geometry: components["schemas"]["Geometry"];
      /** @description Properties defining flood thresholds for various return periods, used to categorize flood risk. */
      properties: components["schemas"]["ThresholdProperties"];
    };
    /** ThresholdFeatureCollection */
    ThresholdFeatureCollection: {
      /**
       * Type
       * @description The type of the collection, typically 'FeatureCollection' for a group of features.
       * @constant
       */
      type: "FeatureCollection";
      /**
       * Features
       * @description A collection of threshold features, each outlining the specific discharge thresholds associated with different return period flood risks.
       */
      features: components["schemas"]["ThresholdFeature"][];
    };
    /** ThresholdProperties */
    ThresholdProperties: {
      /**
       * Threshold 2Y
       * @description The 2-year return period threshold in m^3/s.
       * @example 17.34925885
       */
      threshold_2y: number;
      /**
       * Threshold 5Y
       * @description The 5-year return period threshold in m^3/s.
       * @example 19.26002567
       */
      threshold_5y: number;
      /**
       * Threshold 20Y
       * @description The 20-year return period threshold in m^3/s.
       * @example 30.15522911
       */
      threshold_20y: number;
    };
    /** ThresholdResponseModel */
    ThresholdResponseModel: {
      /** @description A feature collection representing the queried location's threshold data for flood risk analysis. */
      queried_location: components["schemas"]["ThresholdFeatureCollection"];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get summary forecast for a location
   * @description Returns a summary forecast of the next 30 days either for the cell at the given coordinates or for the cells within the given bounding box
   */
  summary_summary_get: {
    parameters: {
      query?: {
        /** @description Longitude */
        lon?: number | null;
        /** @description Latitude */
        lat?: number | null;
        /** @description Minimum longitude */
        min_lon?: number | null;
        /** @description Maximum longitude */
        max_lon?: number | null;
        /** @description Minimum latitude */
        min_lat?: number | null;
        /** @description Maximum latitude */
        max_lat?: number | null;
        /** @description Whether or not to include neighboring cells in the response */
        include_neighbors?: boolean;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SummaryResponseModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get detailed forecast for a location
   * @description Returns a detailed forecast of the next 30 days either for the cell at the given coordinates or for the cells within the given bounding box
   */
  detailed_detailed_get: {
    parameters: {
      query?: {
        /** @description Longitude */
        lon?: number | null;
        /** @description Latitude */
        lat?: number | null;
        /** @description Minimum longitude */
        min_lon?: number | null;
        /** @description Maximum longitude */
        max_lon?: number | null;
        /** @description Minimum latitude */
        min_lat?: number | null;
        /** @description Maximum latitude */
        max_lat?: number | null;
        /** @description Whether or not to include neighboring cells in the response */
        include_neighbors?: boolean;
        /** @description Inclusive lower bound for the range of dates to return data for. If omitted the date range will not have a lower bound */
        start_date?: string | null;
        /** @description Inclusive upper bound for the range of dates to return data for. If omitted the date range will not have an upper bound */
        end_date?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DetailedResponseModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get return period thresholds for a location
   * @description Returns the 2-, 5-, and 20-year return period thresholds either for the cell at the given coordinates or for the cells within the given bounding box
   */
  threshold_threshold_get: {
    parameters: {
      query?: {
        /** @description Longitude */
        lon?: number | null;
        /** @description Latitude */
        lat?: number | null;
        /** @description Minimum longitude */
        min_lon?: number | null;
        /** @description Maximum longitude */
        max_lon?: number | null;
        /** @description Minimum latitude */
        min_lat?: number | null;
        /** @description Maximum latitude */
        max_lat?: number | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ThresholdResponseModel"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Check if this service is ready to receive requests
   * @description Returns a message describing the status of this service
   */
  ready_ready_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Check if this service is alive
   * @description Returns a simple message to indicate that this service is alive
   */
  liveness_health_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: string;
          };
        };
      };
    };
  };
}
