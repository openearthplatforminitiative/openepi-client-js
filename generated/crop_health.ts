/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/ping': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get TorchServe status. */
    get: operations['ping'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/predictions/binary': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Health predictions by the Binary model. */
    post: operations['predictions_with_Binary'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/predictions/single-HLT': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Health predictions by the SingleHLT model. */
    post: operations['predictions_with_SingleHLT'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/predictions/multi-HLT': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Health predictions by the MultiHLT model. */
    post: operations['predictions_with_MultiHLT'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** @example {
     *       "HLT": 0.85,
     *       "NOT_HLT": 0.15
     *     } */
    BinaryPredictionResponse: {
      /** @description Healthy */
      HLT: number;
      /** @description Not Healthy */
      NOT_HLT: number;
    };
    /** @example {
     *       "HLT": 0.8450168371200562,
     *       "CSSVD": 0.14720021188259125,
     *       "ANT": 0.007312592584639788,
     *       "CMD": 0.00043629767606034875,
     *       "BR": 0.000018495124095352367,
     *       "CBSD": 0.0000063890015553624835,
     *       "FW": 0.000003867091891152086,
     *       "FAW": 0.0000030916353352949955,
     *       "ALS": 0.0000014288182228483493,
     *       "MSV": 6.82656491335365e-7,
     *       "MLB": 1.0789210591610754e-7,
     *       "BS": 1.5242493489608933e-8,
     *       "MLN": 1.5041418111039206e-9
     *     } */
    SingleHLTPredictionResponse: {
      /** @description Healthy */
      HLT: number;
      /** @description Cassava Brown Streak Disease */
      CBSD: number;
      /** @description Cassava Mosaic Disease */
      CMD: number;
      /** @description Maize Lethal Necrosis */
      MLN: number;
      /** @description Maize Streak Virus */
      MSV: number;
      /** @description Fall Armyworm */
      FAW: number;
      /** @description Maize Leaf Blight */
      MLB: number;
      /** @description Bean Rust */
      BR: number;
      /** @description Angular Leaf Spot */
      ALS: number;
      /** @description Black Sigatoka */
      BS: number;
      /** @description Fusarium Wilt Race 1 */
      FW: number;
      /** @description Anthracnose */
      ANT: number;
      /** @description Cocoa Swollen Shoot Virus Disease */
      CSSVD: number;
    };
    /** @example {
     *       "HLT_cocoa": 0.4922555685043335,
     *       "CSSVD_cocoa": 0.31238827109336853,
     *       "HLT_beans": 0.1199931725859642,
     *       "HLT_maize": 0.055395256727933884,
     *       "ANT_cocoa": 0.008309438824653625,
     *       "BR_beans": 0.005891730077564716,
     *       "HLT_bananas": 0.002898828824982047,
     *       "ALS_beans": 0.0012257732450962067,
     *       "CMD_cassava": 0.0009540125029161572,
     *       "HLT_cassava": 0.0003349129983689636,
     *       "FAW_maize": 0.00016859767492860556,
     *       "CBSD_cassava": 0.00010111751180374995,
     *       "MSV_maize": 0.0000391885478165932,
     *       "FW_bananas": 0.000023203281671158038,
     *       "MLB_maize": 0.000020815876268898137,
     *       "MLN_maize": 8.257627115426658e-8,
     *       "BS_bananas": 9.579996351760656e-9
     *     } */
    MultiHLTPredictionResponse: {
      /** @description Healthy Cassava */
      HLT_cassava: number;
      /** @description Cassava Brown Streak Disease */
      CBSD_cassava: number;
      /** @description Cassava Mosaic Disease */
      CMD_cassava: number;
      /** @description Maize Lethal Necrosis */
      MLN_maize: number;
      /** @description Healthy Maize */
      HLT_maize: number;
      /** @description Maize Streak Virus */
      MSV_maize: number;
      /** @description Fall Armyworm */
      FAW_maize: number;
      /** @description Maize Leaf Blight */
      MLB_maize: number;
      /** @description Healthy Beans */
      HLT_beans: number;
      /** @description Bean Rust */
      BR_beans: number;
      /** @description Angular Leaf Spot */
      ALS_beans: number;
      /** @description Healthy Bananas */
      HLT_bananas: number;
      /** @description Black Sigatoka */
      BS_bananas: number;
      /** @description Fusarium Wilt Race 1 */
      FW_bananas: number;
      /** @description Healthy Cocoa */
      HLT_cocoa: number;
      /** @description Anthracnose */
      ANT_cocoa: number;
      /** @description Cocoa Swollen Shoot Virus Disease */
      CSSVD_cocoa: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  ping: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description TorchServe status */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Overall status of the TorchServe. */
            status: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Error code. */
            code: number;
            /** @description Error type. */
            type: string;
            /** @description Error message. */
            message: string;
          };
        };
      };
    };
  };
  predictions_with_Binary: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Picture of a plant. */
    requestBody: {
      content: {
        '*/*': Buffer;
      };
    };
    responses: {
      /** @description Predicted class confidences, all summing to 1.0. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['BinaryPredictionResponse'];
        };
      };
      /** @description Model not found or Model Version not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Error code. */
            code: number;
            /** @description Error type. */
            type: string;
            /** @description Error message. */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Error code. */
            code: number;
            /** @description Error type. */
            type: string;
            /** @description Error message. */
            message: string;
          };
        };
      };
      /** @description No worker is available to serve request */
      503: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Error code. */
            code: number;
            /** @description Error type. */
            type: string;
            /** @description Error message. */
            message: string;
          };
        };
      };
    };
  };
  predictions_with_SingleHLT: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Picture of a plant. */
    requestBody: {
      content: {
        '*/*': Buffer;
      };
    };
    responses: {
      /** @description Predicted class confidences, all summing to 1.0. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SingleHLTPredictionResponse'];
        };
      };
      /** @description Model not found or Model Version not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Error code. */
            code: number;
            /** @description Error type. */
            type: string;
            /** @description Error message. */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Error code. */
            code: number;
            /** @description Error type. */
            type: string;
            /** @description Error message. */
            message: string;
          };
        };
      };
      /** @description No worker is available to serve request */
      503: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Error code. */
            code: number;
            /** @description Error type. */
            type: string;
            /** @description Error message. */
            message: string;
          };
        };
      };
    };
  };
  predictions_with_MultiHLT: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Picture of a plant. */
    requestBody: {
      content: {
        '*/*': Buffer;
      };
    };
    responses: {
      /** @description Predicted class confidences, all summing to 1.0. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['MultiHLTPredictionResponse'];
        };
      };
      /** @description Model not found or Model Version not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Error code. */
            code: number;
            /** @description Error type. */
            type: string;
            /** @description Error message. */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Error code. */
            code: number;
            /** @description Error type. */
            type: string;
            /** @description Error message. */
            message: string;
          };
        };
      };
      /** @description No worker is available to serve request */
      503: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            /** @description Error code. */
            code: number;
            /** @description Error type. */
            type: string;
            /** @description Error message. */
            message: string;
          };
        };
      };
    };
  };
}
